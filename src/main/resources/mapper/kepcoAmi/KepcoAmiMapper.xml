<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pms.api.kepcoAmi.service.KepcoAmiMapper">
    <!-- EDSM에 등록된 AMI중, DB에도 저장된 값 찾기 -->
    <select id="getRegisterAmi" parameterType="HashMap" resultType="KepcoAmi">
        SELECT a.ami_idx amiIdx,
               a.mid     meterNo,
               b.custNo  custNo
        FROM tb_ami a,
             (
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            SELECT #{item.meterNo} AS meterNo , #{item.custNo} AS custNo
        </foreach>
             ) b
        WHERE mid IN (
        <foreach collection="list" index="index" item="item" separator=",">
            #{item.meterNo}
        </foreach>
        )
        AND a.mid = b.meterNo
    </select>

    <!-- 소비 데이터 등록 미완료된 고객 번호 조회 -->
    <select id="selectCallApiList" parameterType="HashMap" resultType="KepcoAmi">
        SELECT
            a.kepco_cstmr_no                                                         custNo,
            a.ami_idx                                                                amiIdx,
            a.data_request_dt                                                        dataRequestDt,
            IF(a.request_success_dt IS NULL,
               DATE_FORMAT(b.reg_dt,'%Y%m%d'),
               DATE_FORMAT(DATE_ADD(a.request_success_dt, INTERVAL 1 DAY),'%Y%m%d')) requestSuccessDt
        FROM tb_kepco_api_result a,
             tb_cnsmr b
        WHERE a.kepco_cstmr_no = b.kepco_cstmr_no
        AND   a.del_yn = 'N'
        AND ( a.request_success_dt != DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -2 DAY),'%Y%m%d')
            OR
              a.request_success_dt IS NULL
            )
    </select>

    <!-- 한전 API 응답 결과 등록 -->
    <insert id="insertApiResultList" parameterType="KepcoAmi">
        INSERT INTO tb_kepco_api_result(kepco_cstmr_no, ami_idx, data_request_dt, request_success_dt)
        SELECT * FROM (
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            (
            SELECT
                #{item.custNo} AS kepcoCstmrNo,
                #{item.amiIdx} AS amiIdx,
                #{item.meteringDate} AS dataRequestDt,
                #{item.requestSuccessDt} AS requestSuccessDt
            )
        </foreach>
        ) AS A
        ON DUPLICATE KEY UPDATE
        data_request_dt = IF(dataRequestDt IS NULL, data_request_dt, dataRequestDt),
        request_success_dt = IF(requestSuccessDt IS NULL, request_success_dt, requestSuccessDt)
    </insert>

    <!-- 한전 API 결과 테이블 단건 업데이트 -->
    <update id="updateSingleApiResult" parameterType="KepcoAmi">
        UPDATE tb_kepco_api_result
        SET request_success_dt = #{requestSuccessDt}
        WHERE kepco_cstmr_no = #{custNo}
        AND ami_idx = #{amiIdx}
    </update>

    <!-- 한전 AMI 15분 데이터 등록 -->
    <insert id="insertAmi15MinuteData" parameterType="KepcoAmi">
        INSERT INTO tb_kepco_15m(
                                    metering_date,
                                    hhmm,
                                    ami_idx,
                                    use_type,
                                    reg_dt,
                                    mid,
                                    kepco_cstmr_no,
                                    metering_val,
                                    accmlt_metering_val,
                                    api_call_result,
                                    error_response_msg
                                 )
        SELECT *
        FROM (
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            ( SELECT
                #{item.meteringDate},
                #{item.meteringTime},
                #{item.amiIdx},
                '1',
                sysdate(),
                #{item.meterNo},
                #{item.custNo},
                #{item.meteringVal} AS meteringVal,
                <choose>
                    <when test="item.accmltMeteringVal != null and item.accmltMeteringVal != ''">
                        #{item.accmltMeteringVal} AS accmltMeteringVal,
                    </when>
                    <otherwise>
                        IFNULL((
                            SELECT (
                                SELECT accmlt_metering_val
                                FROM tb_kepco_15m
                                WHERE 1=1
                                AND ami_idx = #{item.amiIdx}
                                AND use_type = '1'
                                AND metering_date = (
                                    SELECT MAX(metering_date) FROM tb_kepco_15m
                                    WHERE 1=1
                                    AND ami_idx = #{item.amiIdx}
                                    AND use_type = '1'
                                    AND metering_date <![CDATA[ <= ]]> #{item.meteringDate}
                                )
                            AND hhmm = (
                                SELECT MAX(hhmm)
                                FROM tb_kepco_15m
                                WHERE 1=1
                                AND ami_idx = #{item.amiIdx}
                                AND use_type = '1'
                                AND metering_date = (
                                    SELECT MAX(metering_date) FROM tb_kepco_15m
                                    WHERE 1=1
                                    AND ami_idx = #{item.amiIdx}
                                    AND use_type = '1'
                                    AND metering_date <![CDATA[ <= ]]> #{item.meteringDate}
                                    )
                                AND hhmm  <![CDATA[ < ]]>  #{item.meteringTime}
                                )
                            ))
                        , #{item.meteringVal}) AS accmltMeteringVal,
                    </otherwise>
                </choose>
                #{item.apiCallResult} AS apiCallResult,
                #{item.errorResponseMsg} AS errorResponseMsg
            )
        </foreach>
        ) AS A

        ON DUPLICATE KEY UPDATE
        metering_val = meteringVal,
        accmlt_metering_val = accmltMeteringVal,
        api_call_result = apiCallResult,
        error_response_msg = errorResponseMsg

    </insert>

    <!-- 한전 AMI 한시간 데이터 등록 -->
    <insert id="insertAmiHourData" parameterType="KepcoAmi">
        INSERT INTO tb_kepco_hour(
                metering_date,
                hh,
                ami_idx,
                use_type,
                reg_dt,
                mid,
                kepco_cstmr_no,
                metering_val,
                accmlt_metering_val
                )
            SELECT *
            FROM (
            <foreach collection="list" index="index" item="item" separator="UNION ALL">
                    (
                    SELECT
                        DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, #{item.meteringTime},'00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE ),'%Y%m%d'),
                        DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, #{item.meteringTime},'00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE),'%H'),
                        #{item.amiIdx},
                        '1',
                        sysdate(),
                        #{item.meterNo},
                        #{item.custNo},
                        SUM(metering_val) AS meteringVal,
                <choose>
                <when test="item.accmltMeteringVal != null and item.accmltMeteringVal != ''">
                    #{item.accmltMeteringVal} AS accmltMeteringVal
                </when>
                <otherwise>
                    MAX(accmlt_metering_val) AS accmltMeteringVal
                </otherwise>
                </choose>
                    FROM tb_kepco_15m
                    WHERE 1 = 1
                    AND use_type = '1'
                    AND mid = #{item.meterNo}
                    <choose>
                        <when test="item.meteringTime eq '0000'">
                            AND (metering_date, hhmm) IN (
                            ( #{item.meteringDate}, #{item.meteringTime})
                            ,( DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, '0000','00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE ),'%Y%m%d'), '2345')
                            , (DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, '0000','00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE ),'%Y%m%d'), '2330')
                            , (DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, '0000','00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE ),'%Y%m%d'), '2315')
                            )
                        </when>
                        <otherwise>
                            AND metering_date = #{item.meteringDate}
                            AND hhmm <![CDATA[ <= ]]> #{item.meteringTime}
                            AND hhmm <![CDATA[ > ]]>  CONCAT(DATE_FORMAT(DATE_ADD(DATE_FORMAT(CONCAT( #{item.meteringDate}, #{item.meteringTime},'00'),'%Y%m%d%H%i%s'), INTERVAL -15 MINUTE),'%H'),'00')
                        </otherwise>
                    </choose>
                  )
            </foreach>
            ) AS A

        ON DUPLICATE KEY UPDATE
        metering_val = meteringVal,
        accmlt_metering_val = accmltMeteringVal
    </insert>

    <!-- 한전 AMI 하루 데이터 등록 -->
    <insert id="insertAmiDayData" parameterType="KepcoAmi">
        INSERT INTO tb_kepco_day(
        metering_date,
        ami_idx,
        use_type,
        reg_dt,
        mid,
        kepco_cstmr_no,
        metering_val,
        accmlt_metering_val
        )
        SELECT *
        FROM (
            SELECT
                #{meteringDate},
                #{amiIdx},
                '1',
                sysdate(),
                #{meterNo},
                #{custNo},
                SUM(metering_val) AS meteringVal,
                MAX(accmlt_metering_val) AS accmltMeteringVal

            FROM tb_kepco_hour
            WHERE 1 = 1
            AND use_type = '1'
            AND mid = #{meterNo}
            AND metering_date = #{meteringDate}
        ) AS A

        ON DUPLICATE KEY UPDATE
        metering_val = meteringVal,
        accmlt_metering_val = accmltMeteringVal
    </insert>
    <!-- 한전 AMI 15분 에러 데이터 등록 -->
    <insert id="insertAmi15MinuteErrorData" parameterType="KepcoAmi">
        INSERT INTO tb_kepco_15m(
        metering_date,
        hhmm,
        ami_idx,
        use_type,
        reg_dt,
        mid,
        kepco_cstmr_no,
        metering_val,
        accmlt_metering_val,
        api_call_result,
        error_response_msg
        )
        SELECT *
        FROM (
        <foreach collection="list" index="index" item="item" separator="UNION ALL">
            ( SELECT
            #{item.meteringDate},
            #{item.meteringTime},
            #{item.amiIdx},
            '1',
            sysdate(),
            #{item.meterNo},
            #{item.custNo},
            #{item.meteringVal} AS meteringVal,
            ( SELECT MAX(accmlt_metering_val)
              FROM tb_kepco_15m
              WHERE ami_idx       =  #{item.amiIdx}
              AND use_type        = '1'
              AND metering_date   = (SELECT MAX(metering_date) WHERE ami_idx = #{item.amiIdx} AND metering_date <![CDATA[ < ]]> #{item.meteringDate})) AS accmltMeteringVal,
            #{item.apiCallResult} AS apiCallResult,
            #{item.errorResponseMsg} AS errorResponseMsg
            )
        </foreach>
        ) AS A

        ON DUPLICATE KEY UPDATE
        metering_val = meteringVal,
        accmlt_metering_val = accmltMeteringVal,
        api_call_result = apiCallResult,
        error_response_msg = errorResponseMsg

    </insert>

    <!-- 한전 AMI 15분 누적 데이터 교정(00시 15분 ~ 45분) -->
    <update id="updateCorrectDayStartAccmltMeteringVal" parameterType="HashMap">
        UPDATE tb_kepco_15m
        SET accmlt_metering_val  = (
            SELECT a.accmlt_metering_val + b.metering_val
            FROM
            (
                SELECT accmlt_metering_val
                FROM tb_kepco_15m
                WHERE ami_idx       = #{amiIdx}
                AND use_type        = '1'
                AND metering_date   = #{meteringDate}
                AND hhmm            = #{previousTime}
            ) AS a, (
                SELECT metering_val
                FROM tb_kepco_15m
                WHERE ami_idx       = #{amiIdx}
                AND use_type        = '1'
                AND metering_date   = #{meteringDate}
                AND hhmm            = #{meteringTime}
            ) b
        )
        WHERE ami_idx       = #{amiIdx}
          AND use_type      = '1'
          AND metering_date = #{meteringDate}
          AND hhmm          = #{meteringTime}
    </update>

    <!-- 한전 AMI 15분 누적 데이터 교정(00시 00분) -->
    <update id="updateCorrectDayLastAccmltMeteringVal" parameterType="HashMap">
        UPDATE tb_kepco_15m
        SET    accmlt_metering_val = (
            SELECT accmlt_metering_val
            FROM
             ( SELECT accmlt_metering_val
               FROM tb_kepco_15m
               WHERE ami_idx        = #{amiIdx}
               AND use_type         = '1'
               AND metering_date    = #{previousDate}
               AND hhmm             = '2345'
            ) a
        )
        WHERE ami_idx     = #{amiIdx}
        AND use_type      = '1'
        AND metering_date = #{meteringDate}
        AND hhmm          = #{meteringTime}
    </update>
</mapper>